plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.kotlin.kapt'
    id 'androidx.navigation.safeargs.kotlin'
}

static def getDatetime() {
    return new Date().format("yyyyMMddHH").toInteger()
}

def getCommitCount() {
    // SRC: https://gist.github.com/paramsen/4a92c9230d799caeb3b90897da27a80c
    def result = providers.exec { commandLine("git", "rev-list", "HEAD", "--count") }.standardOutput.asText.get().trim()
    if (result.empty) // try Windows
        result = providers.exec { commandLine("PowerShell", "-Command", "git", "rev-list", "HEAD", "--count") }.standardOutput.asText.get().trim()
    if (result.empty) throw new RuntimeException("Could not generate versioncode on this platform")
    return result.toInteger()
}

android {
    namespace 'io.github.nircek.applicationsieve'
    compileSdk 33

    defaultConfig {
        applicationId "io.github.nircek.applicationsieve"
        minSdk 21
        targetSdk 33
        versionName "1.2.3.1"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }
    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            if (variant.buildType.name == 'debug') {
                output.versionCodeOverride = getDatetime()
            }
            if (variant.buildType.name == 'release') {
                output.versionCodeOverride = getCommitCount()
                output.outputFileName = "io.github.nircek.applicationsieve_v${variant.versionName}.apk"
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            applicationIdSuffix '.debug'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        viewBinding true
    }
    dataBinding {
        enabled = true
    }
}

task copyReleaseReady(type: Copy) {
    from 'release'
    into 'release_archive'
    include '*.apk'
}

afterEvaluate {
    assembleRelease.finalizedBy copyReleaseReady
}

dependencies {
    implementation "androidx.appcompat:appcompat:$rootProject.appCompatVersion"
    implementation "androidx.activity:activity-ktx:$rootProject.activityVersion"
    implementation "androidx.navigation:navigation-fragment-ktx:$rootProject.navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$rootProject.navigationVersion"

    // Room components
    implementation "androidx.room:room-ktx:$rootProject.roomVersion"
    //implementation 'androidx.core:core-ktx:'
    kapt "androidx.room:room-compiler:$rootProject.roomVersion"

    // Lifecycle components
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$rootProject.lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$rootProject.lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-common-java8:$rootProject.lifecycleVersion"

    // Kotlin components
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:$rootProject.coroutines"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:$rootProject.coroutines"

    // UI
    implementation "androidx.constraintlayout:constraintlayout:$rootProject.constraintLayoutVersion"
    implementation "com.google.android.material:material:$rootProject.materialVersion"


}
